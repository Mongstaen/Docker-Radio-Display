name: Build Docker Container
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
env:
  currentDate: ${{ format(github.run_started_at, 'yyyy-MM-dd') }}
  DOCKER_BUILDKIT: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: .
      - name: Set image name
        run: echo "imageName=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Show image name
        run: echo "Image name is $imageName"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine build tag
        run: |
          git fetch --tags
          TAG=$(git tag --points-at HEAD | head -n 1)
          if [ -n "$TAG" ]; then
            echo "Found tag: $TAG"
            echo "VersionTag=$TAG" >> $GITHUB_ENV
          else
            echo "No tag found, using GitHub run number: $GITHUB_RUN_NUMBER"
            echo "VersionTag=${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
          fi
        if: >
          success() &&
          (github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, 'BUILD'))

      - name: List files in working directory
        run: ls -lah
      - name: Show current directory
        run: pwd

      - name: Build
        if: >
          success() &&
          (github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, 'BUILD') || contains(github.event.head_commit.message, 'TESTING'))

        run: |
          docker build -f Dockerfile -t ${{ vars.DOCKER_REGISTRY }}/${{ env.imageName }}:${{ github.run_id }} -t ${{ vars.DOCKER_REGISTRY }}/${{ env.imageName }}:latest \
          --cache-from ${{ vars.DOCKER_REGISTRY }}/${{ env.imageName }} \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          --build-arg BUILD_ID=${{ github.run_id }} --build-arg BUILD_DATE=${{ env.currentDate }} \
          --build-arg VERSION_TAG=${{ env.VersionTag }} .

      - name: Push Run ID
        run: |
          docker push ${{ vars.DOCKER_REGISTRY }}/${{ env.imageName }}:${{ github.run_id }}
        if: >
          success() &&
          (github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, 'TESTING'))

      - name: Push Latest
        run: |
          docker push ${{ vars.DOCKER_REGISTRY }}/${{ env.imageName }}:${{ github.run_id }}
          docker push ${{ vars.DOCKER_REGISTRY }}/${{ env.imageName }}:latest
        if: >
          success() &&
          (github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, 'BUILD'))
