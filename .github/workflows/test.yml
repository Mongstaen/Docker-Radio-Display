name: Build and Push Docker Image

on:
  push:
    branches: [tag-test]
    tags: ["v*.*.*"]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper versioning
      - name: Set image name
        run: echo "IMAGE_NAME=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Show image name
        run: echo "Image name is $IMAGE_NAME"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=ref,event=branch
            # set version tag for tag pushes
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # set pr-<number> tag for pull requests
            type=ref,event=pr
            # set sha-<commit> tag for any push
            type=sha,prefix={{branch}}-,format=short
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.created={{date 'YYYY-MM-DDTHH:mm:ssZ'}}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Generate version for non-tag pushes
        id: version
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            # Get the latest tag, or default to v0.0.0 if no tags exist
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            
            # Remove 'v' prefix and increment patch version
            VERSION=${LATEST_TAG#v}
            IFS='.' read -ra ADDR <<< "$VERSION"
            MAJOR=${ADDR[0]:-0}
            MINOR=${ADDR[1]:-0}
            PATCH=${ADDR[2]:-0}
            
            # Increment patch for non-tag builds
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"
            
            # Add pre-release suffix with commit SHA and run number
            PRE_RELEASE="${NEW_VERSION}-dev.${{ github.run_number }}.${GITHUB_SHA::8}"
            echo "version=${PRE_RELEASE}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image details
        run: |
          echo "Built and pushed:"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Version: ${{ steps.version.outputs.version }}"
          echo "Digest: ${{ steps.build.outputs.digest }}"
